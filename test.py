test_dict = {
    "message": "Resume processed and added into the knowledge base successfully.",
    "analysis": '```json\n{\n  "strong_suits": [\n    "Python (FastAPI, Flask)",\n    "REST API Development & Integration",\n    "Containerization (Docker, Docker Compose)",\n    "Database Interaction (MongoDB, conceptual SQL)",\n    "Version Control (Git)",\n    "Performance & Security Awareness (caching, authentication, authorization, data validation)",\n    "AI/ML Integration (RAG, Gemini API, OCR)",\n    "Object-Oriented Programming (OOP)",\n    "Conceptual Microservices Architecture"\n  ],\n  "projects": [\n    "Apptitude — AI-Powered Resume Analysis and Job Recommendation Platform (FastAPI, RAG, AI Integration)",\n    "Student Competency Calculator - Competency Evaluation Platform (Flask, Gemini API)",\n    "ScriptScribe — AI-Powered Text Processing Platform (Flask, OCR)"\n  ],\n  "industry_readiness": "Garvit demonstrates strong foundational skills in Python backend development with practical experience in FastAPI, Flask, and Docker. The internship and projects indicate an awareness of performance optimization, API security, and database interaction, suggesting a good starting point for production backend standards. However, deeper understanding in areas like comprehensive testing, advanced SQL/ORM, asynchronous programming patterns, and robust error handling is likely needed for full production readiness.",\n  "assessment_areas": [\n    "Advanced Python Fundamentals",\n    "Web Frameworks (FastAPI/Flask) & REST APIs",\n    "Database Management (SQL & NoSQL) & ORMs",\n    "Asynchronous Programming",\n    "Containerization & Deployment Practices",\n    "API Security, Error Handling & Logging",\n    "Testing & Quality Assurance"\n  ],\n  "final_quiz_topics": [\n    "Advanced Python Language Features (Decorators, Context Managers, Generators)",\n    "FastAPI: Dependency Injection, Background Tasks, Pydantic validation, Custom Error Handling",\n    "Flask: Blueprints, Application & Request Context, Custom Decorators, Middleware",\n    "Intermediate SQL (JOINs, Subqueries, Window Functions, Transactions, Indexing)",\n    "ORM Basics (e.g., SQLAlchemy with FastAPI/Flask)",\n    "MongoDB: Aggregation Pipeline, Advanced Indexing Strategies",\n    "Asynchronous Programming with `asyncio` and `async/await` patterns in FastAPI (event loop, common pitfalls)",\n    "Docker: Multi-stage Dockerfiles, Docker Compose for complex service orchestration, volume/network management",\n    "API Security: JWT Authentication flow, Rate Limiting, Input Sanitization",\n    "Structured Logging & Error Handling Strategies for Production APIs",\n    "Unit and Integration Testing with `pytest` (mocking, testing API endpoints)"\n  ],\n  "quiz_level": "intermediate",\n  "reasoning": "Garvit has a solid foundation in Python backend development, demonstrated through a relevant internship and impressive projects utilizing FastAPI, Flask, and Docker. The \'intermediate\' quiz plan aims to deepen this understanding, moving beyond functional implementation to robust, production-ready practices. Topics are selected to reinforce existing strengths (frameworks, Docker) while addressing common gaps for junior developers: comprehensive testing, advanced relational database interaction (ORMs, complex SQL), efficient asynchronous programming, and best practices in API security, logging, and error handling. This plan will prepare the candidate to contribute effectively to more complex backend systems."\n}\n```',
}


def take_input(json_dict: dict):
    if not json_dict:
        return {"message": "we did not get the dict"}
    print(json_dict)


take_input(test_dict)
